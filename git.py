print("Remember start with Git Bash")

commands={
    "pwd":"My location at PC.",
    "cd":"Command to go any place.",
    "cd + /c":"Go to c unit.",
    "cd + ..":"Move to former directory.",
    "cd /":"Go home, it wanna mean root $. ",
    "ls":"Files in the directory.",
    "ls -al":"Shows hidden files.",
    "clear":"Clean console, it is possible ctrl + l.",
    "mkdir + name of directory":"Create directory.",
    "touch":"Create an empty file.",
    "cat + file name":"Show file content.",
    "history":"Show all command used by me.",
    "git init":"Initialize git services in specified directory.",
    "rm + file":"Remove a file.",
    "command --help":"Explanations about commands.",    
    "git status":"State of project.",
    "git add":"Add an action in the project.",
    "git add .":"Ad all files. Staged.",
    "git commit -m":"Track changes with a message. It send files from staged to master",
    "git config":"For git configuration.",
    "git config --list":"List for configuration.",
    "git config --list --show-origin":"Core information",
    "git config --global user.name \"My name\"":"For put name of user.",
    "git config --global user.email \"My name\"":"For put name of mail.",
    "git rm + file":"Remove.",
    "git rm --cached":"File without add.",
    "git log":"Tracking.",
    "esc + shift + zz":"To exit of comment window.",
    "checkout":"Shows all changes.",
    "Stage":"RAM",
    "Master":"Directory where is placed the main project.",
    "git reset --hard":"Former version",
    "git diff":"Differences between 2 files.",
    "git log --stat":"All changes.",
    "git checkout master + file":"Version required.",
    "git push origin main":"Send files to remote.",
    "git fetch":"From remote to local.",
    "git pull":"It is a kind of merge.",
    "q":"Exit",
    "git a":"",
    "git show":"Show lastchanges.",
    "git branch + name of new branch":"Create a new branch.",
    "git checkout + name of new branch":"It moves to new branch.",
    "git commit -am ":"Do git add of all changes. Only to files added previously.",
    "git log --all --graph":"Shows the branches",
    "git log --all --graph --decorate --oneline":"More information",
    "alias name=command\"\"":"Alias",
    "git tag -a v0.1 -m \"Message\" + hash" :"Tags for version.",
    "git tag":"Show tag.",
    "git show-ref --tags":"Show all tags.",
    "git tag -d Name of tag":"Erase a tag.",
    "git show-branch --all":"Shows all branches.",
    "gitk":"Super command for visual interpretation."
       
    }

print(commands)
